#!/usr/bin/env python
# -*- coding: utf-8 -*-
# generated by wxGlade 0.6.3 on Fri Oct 15 18:40:31 2010 from "/home/mgross/marks/moog/gui-hack/test1.wxg"

import wx
import thread
import random
import socket
import struct
import  wx.lib.newevent

(UpdateMTSEvent, EVT_UPDATE_VALUES) = wx.lib.newevent.NewEvent()


class MyFrame(wx.Frame):
    def unpack_data(self, s):
        retVal = []
        d = struct.unpack("548B", s)
        for key in xrange(88):
            offset = 20 + 6*key 
            keyID = d[offset] -1
            x = d[offset+1] 
            y = d[offset+2]
            z = d[offset+3]
            a = d[offset+4]
            f = d[offset+5]
            retVal.append( (keyID, x, y, z, a, f))

        return retVal

    def listen_thread(self):
        HOST = '127.0.0.1'                 # Symbolic name meaning all available interfaces
        PORT = 57120
        s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
        s.bind((HOST, PORT))
        while True:
            data = s.recv(1024)
            event = self.unpack_data(data)
            for keyID in xrange(88):
                evt = UpdateMTSEvent(key = event[keyID][0], xvalue = event[keyID][1], yvalue = event[keyID][2])
                wx.PostEvent(self, evt)



    def __init__(self, *args, **kwds):
        # begin wxGlade: MyFrame.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.YValues_staticbox = wx.StaticBox(self, -1, "Y Values")
        self.Xvalues_staticbox = wx.StaticBox(self, -1, "X Values")
        self.xvalues = []
        self.yvalues = []
        for i in xrange(88):
            gauge = wx.Gauge(self, -1, 256, style=wx.GA_HORIZONTAL|wx.GA_SMOOTH)
            self.xvalues.append(gauge)
            gauge = wx.Gauge(self, -1, 256, style=wx.GA_HORIZONTAL|wx.GA_SMOOTH)
            self.yvalues.append(gauge)

        self.__set_properties()
        self.__do_layout()
        self.Bind(EVT_UPDATE_VALUES, self.OnUpdate)

        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: MyFrame.__set_properties
        self.SetTitle("frame_1")
        for g in self.xvalues:
            g.SetValue(0)
            g.SetMinSize(wx.DLG_SZE(g, (81, 5)))
        
        for g in self.yvalues:
            g.SetValue(66)
            g.SetMinSize(wx.DLG_SZE(g, (81, 5)))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MyFrame.__do_layout
        sizer_1 = wx.BoxSizer(wx.HORIZONTAL)
        Yvalues = wx.StaticBoxSizer(self.YValues_staticbox, wx.VERTICAL)
        Xvalues = wx.StaticBoxSizer(self.Xvalues_staticbox, wx.VERTICAL)
        for g in self.xvalues:
            Xvalues.Add(g,0, wx.EXPAND, 0)
        sizer_1.Add(Xvalues, 1, wx.EXPAND, 0)
        for g in self.yvalues:
            Yvalues.Add(g,0, wx.EXPAND, 0)
        sizer_1.Add(Yvalues, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_1)
        sizer_1.Fit(self)
        self.Layout()

    def OnUpdate(self, evt):
        self.xvalues[evt.key].SetValue(evt.xvalue)
        self.yvalues[evt.key].SetValue(evt.yvalue)
        self.Refresh(False)



# end of class MyFrame


if __name__ == "__main__":
    app = wx.PySimpleApp(0)
    wx.InitAllImageHandlers()
    frame_1 = MyFrame(None, -1, "")
    app.SetTopWindow(frame_1)
    frame_1.Show()
    listen = thread.start_new_thread(frame_1.listen_thread, ())
    app.MainLoop()
